print(citation('sf'),bibtex = TRUE)
citation('terra')
citation('tmap')
files <- dir_ls('~/Descargas',regexp = 'shp$',recurse = TRUE)
library(geodata)
library(fs)
library(sf)
files <- dir_ls('~/Descargas',regexp = 'shp$',recurse = TRUE)
files
pol <- read_sf(files[2])
pol
st_geometry(pol)
class(pol)
class(st_geometry(pol))
st_geometry(pol)
pol
st_dimension(pol)
st_geometry_type(pol)
pol
pol |> distinct(region)
library(tidyverse)
pol |> distinct(REGION)
pol |> filter(REGION == 'RM')
pol |> filter(REGION == 'RM') |> st_geometry() |> plot()
pol |> filter(PROVINCIA == 'Santiago') |> st_geometry() |> plot()
pol |> filter(PROVINCIA == 'Santiago') -> lagos_santiago
lagos_santiago
lagos_santiago[,'AREA_KM2'] |> plot()
lagos_santiago[1]
lagos_santiago[1] |> st_geometry() |> plot()
lagos_santiago[1,] |> st_geometry() |> plot()
lagos_santiago[1,] |> st_geometry() |> st_simplify(d = 1000) |> plot()
?st_simplify
lagos_santiago[1,] |> st_geometry() |> st_simplify(dTolerance = 1000) |> plot()
lagos_santiago[1,] |> st_geometry() |> st_simplify(dTolerance = 100) |> plot()
lagos_santiago[1,] |> st_geometry() |> st_simplify(dTolerance = 10) |> plot()
lagos_santiago[1,] |> st_geometry() |> st_simplify(dTolerance = 30) |> plot()
files
pol <- read_sf(files[1])
plot(pol$geometry)
pol
pol |> filter(NOM_REG == 'COQUIMBO')
POL |> distinct(COMUNA)
pol |> distinct(COMUNA)
pol |> distinct(NOM_COM)
pol |> distinct(NOM_COM) |> sample(1)
sample(1,124)
sample(124,1)
pol |> distinct(NOM_COM) |> slice(102)
pol |> filter(NOM_COM = ROMERAL)
pol |> filter(NOM_COM = "ROMERAL")
pol |> filter(NOM_COM == "ROMERAL")
pol |> filter(NOM_COM == "ROMERAL") |> plot()
pol |> filter(NOM_COM == "ROMERAL") |> st_geometry() |>  plot()
pol |> filter(NOM_COM == "ROMERAL") |> st_geometry() |> st_buffer(250) |>  plot()
pol |> filter(NOM_COM == "ROMERAL") |> st_geometry() |> st_buffer(550) |>  plot()
pol$NOMBRE_APR
pol
2*sqrt(3)
library(geodata)
library(fs)
library(sf)
files <- dir_ls('~/Descargas',regexp = 'shp$',recurse = TRUE)
pol <- read_sf(files[1])
files
pol <- read_sf(files[1])
pol
pol$NOM_COM |> unique()
rast(3,3) ->r
library(terra)
rast(3,3) ->r
rast(ncols=3,nrows=3) ->r
r
values(r) <- letters[1:9]
plot(r)
text(t)
text(r)
matric(c(4,0,6,2*sqrt(3),4,4*sqrt(3),0,4*sqrt(3),-2,2*sqrt(3)0,0),ncol=2)
matric(c(4,0,6,2*sqrt(3),4,4*sqrt(3),0,4*sqrt(3),-2,2*sqrt(3),0,0),ncol=2)
(c(4,0,6,2*sqrt(3),4,4*sqrt(3),0,4*sqrt(3),-2,2*sqrt(3),0,0),ncol=2)
c(4,0,6,2*sqrt(3),4,4*sqrt(3),0,4*sqrt(3),-2,2*sqrt(3),0,0)
matrix(c(4,0,6,2*sqrt(3),4,4*sqrt(3),0,4*sqrt(3),-2,2*sqrt(3),0,0),ncol=2)
m <- matrix(c(4,0,6,2*sqrt(3),4,4*sqrt(3),0,4*sqrt(3),-2,2*sqrt(3),0,0,4,0),ncol=2)
library(sf)
m <- matrix(c(4,0,6,2*sqrt(3),4,4*sqrt(3),0,4*sqrt(3),-2,2*sqrt(3),0,0,4,0),ncol=2)
st_polygon(m)
st_polygon(list(m))
m <- matrix(c(4,0,6,2*sqrt(3),4,4*sqrt(3),0,4*sqrt(3),-2,2*sqrt(3),0,0,4,0),ncol=2)
m
m <- matrix(c(4,0,6,2*sqrt(3),4,4*sqrt(3),0,4*sqrt(3),-2,2*sqrt(3),0,0,4,0),ncol=2,byrow = FALSE)
m
m <- matrix(c(4,0,6,2*sqrt(3),4,4*sqrt(3),0,4*sqrt(3),-2,2*sqrt(3),0,0,4,0),ncol=2,byrow = TRUE)
m
st_polygon(list(m))
read_sf('data/Indice_Calidad_de_Aguas/)
read_sf('data/Indice_Calidad_de_Aguas/')
ica <- read_sf('data/Indice_Calidad_de_Aguas/')
#tipo de geometria
class(ica$geometry)
#dimensión
st_dimension(ica)
#dimensión
st_geometry_type(ica)
#dimensión
ica$geometry[1]
#dimensión
class(ica$geometry[1])
str(ica$geometry[1])
names(ica$geometry[1])
class(ica$geometry[1])
str(ica$geometry[1])
st_crs(ica)
?st_crs
st_crs(ica,parameters = TRUE)
ica_src <- st_crs(ica,parameters = TRUE)
ica_src
#datum
ica_src$Name
# EPSG
ica_src$srid
# Cantidad de observaciones
nrow(ica)
st_ext(ica)
st_bbox(ica)
ica <- read_Sf('data/Indice_Calidad_de_Aguas')
ica <- read_sf('data/Indice_Calidad_de_Aguas')
ica$NOM_REG |> unique()
ica$NOM_Prov |> unique()
ica$NOM_PRO |> unique()
lagos <- read_sf('data/Lagos/')
lagos$PROVINCIA |> unique()
lagos[lago$PROVINCIA == 'Santiago']
lagos[lagos$PROVINCIA == 'Santiago']
lagos[lagos$PROVINCIA == 'Santiago',]
#    c) (15pts) haga un mapa (con plot) en donde se muestre con colores la variación de la variable área (AREA_KM2)
plot(lagos_stgo[,'AREA_KM2'])
lagos_stgo <- lagos[lagos$PROVINCIA == 'Santiago',]
#    c) (15pts) haga un mapa (con plot) en donde se muestre con colores la variación de la variable área (AREA_KM2)
plot(lagos_stgo[,'AREA_KM2'])
#    d) (20pts) seleccione el primer lago de `lagos_stgo` y simplifique su geometria, considerando una tolerancia de 30m. Haga un plot de la geometría original y simplificada.
lagos_stgo[1,]
#    d) (20pts) seleccione el primer lago de `lagos_stgo` y simplifique su geometria, considerando una tolerancia de 30m. Haga un plot de la geometría original y simplificada.
lagos_stgo <- st_transform(lagos_stgo,32719)
lago_sim <- st_simplify(lagos_stgo[1,],dTolerance = 30)
plot(lagos_stgo$geometry[1],main ='original')
ica <- read_sf('data/Indice_Calidad_de_Aguas')
ica
ica$NOM_COM |> unique() |> sort()
ica
#    c) (10pts) ¿cuáles son los nombres de las cinco primeras variables de `calag_rom_buf`.
names(calag_rom_buf)[1:5]
v <- c(9,6,4,1,10,25,NA,2,5,10,15,25,100,5,30,50)
-70-15/60
r <- rast(xmin = -70-15/60,xmax=-71-50/60,ymin=-35-20/60,ymax=-35-20/60)
library(terra)
r <- rast(xmin = -70-15/60,xmax=-71-50/60,ymin=-35-20/60,ymax=-35-20/60)
-70-15/60
-71-50/60
r <- rast(xmin = -71-50/60,xmax=-70-15/60,ymin=-35-20/60,ymax=-35-20/60)
-70-15/60
-35-20/60
r <- rast(xmin = -71-50/60,xmax=-70-15/60,ymin=-37-30/60,ymax=-35-20/60)
r <- rast(xmin = -71-50/60,xmax=-70-15/60,ymin=-37-30/60,ymax=-35-20/60,ncols=4,nrows=4)
v <- c(9,6,4,1,10,25,NA,2,5,10,15,25,100,5,30,50)
r <- rast(xmin = -71-50/60,xmax=-70-15/60,ymin=-37-30/60,ymax=-35-20/60,ncols=4,nrows=4)
values(r) <- v
plot(r);text(r)
#| message: false
library(terra)
r <- rast(x=matrix(1:16*5,4,byrow = FALSE),crs="EPSG:4326")
plot(r);text(r)
r
r_proj <- project(r,'EPSG:32719')
r_proj
global(r,c('mean','median'))
global(r,fun = c('mean','median'))
funs = c('mean','median','sd')
sapply(funs, \(fun) global(r,fun = fun))
?global
funs = c('mean','median','sd')
funs
global(r,fun = 'median')
global(r,'median')
global(r, fun = median)
global(r, fun = "median")
global(r, fun = "mean")
global(r, fun = "median")
global(r, fun = median)
funs = c(mean,median,sd)
funs
sapply(funs, \(fun) global(r,'median'))
sapply(funs, \(fun) global(r,fun))
median
funs = c(mean,median,sd)
sapply(funs, \(fun) global(r,fun))
dem_chil <- rast('data/dem_chile.tif')
dem_chil
dem_chile <- rast('data/dem_chile.tif')
#    b) (5pts) número de columnas, filas y capas
dim(dem_chile)[1:2]
#    c) (5pts) resolución espacial
res(dem_chile)
?crs
#    d) (5pts) sistema de referencia de coordenadas
crs(dem_chile,describe = TRUE)
#    e) (5pts) el archivo se encuentra almacenado en la memoria o en el disco.
inMemory(crs)
#    e) (5pts) el archivo se encuentra almacenado en la memoria o en el disco.
inMemory(dem_chile)
sources(dem_chile)
#    f) (15pts) cuál es la elevación máxima y mínima
global(dem_chile,'max',na.rm = TRUE)
im
im <- rast('data/imagen_copiapo.tif')
im
# definimos coordenadas de acuerdo a la imagen
x <- c(6, 4, 0, -2, 0,2,  4)
y <- c(2*sqrt(3), 4*sqrt(3), 4*sqrt(3), 2*sqrt(3), 0, 2*sqrt(3), 0)
coordenadas <- data.frame(x = x, y = y)
ggplot(coordenadas, aes(x = x, y = y)) + geom_polygon(fill = "white",
col = "pink")
#3.Cargue la capa vectorial correspondiente al Inventario Lagos e indique lo siguiente
inven_lagos <- read_sf("data_eva2/Lagos/Inventario_Lagos.shp")
#3.Cargue la capa vectorial correspondiente al Inventario Lagos e indique lo siguiente
inven_lagos <- read_sf("data/Lagos/Inventario_Lagos.shp")
# en la provincia santiago
plot(lagos_stgo[, c(2, 22)], main = "Variación de la variable área (AREA_KM2)")
par(mfrow = c(1,2))
plot(primer_lago$geometry, main = "Geometria simplificada tolerancia 30m")
plot(lagos_stgo[1, 22], main = "Geometria original")
primer_lago <- lagos_stgo[1,]
# tolerancia de 30m.
primer_lago <- st_simplify(primer_lago, dTolerance = 30)
par(mfrow = c(1,2))
plot(primer_lago$geometry, main = "Geometria simplificada tolerancia 30m")
plot(lagos_stgo[1, 22], main = "Geometria original")
par(mfrow = c(1,2))
plot(primer_lago$geometry, main = "Geometria simplificada tolerancia 30m")
plot(lagos_stgo[1, 22], main = "Geometria original")
plot(primer_lago$geometry, main = "Geometria simplificada tolerancia 30m")
# Definir las coordenadas y el CRS
xmn <- -71.83333 # 71°50’ Oeste
xmx <- -70.25    # 70°15’ Oeste
ymn <- -37.5     # 37°30’ Sur
ymx <- -35.33333 # 35°20’ Sur
crs <- "+proj=longlat +datum=WGS84"
# Crear un objeto SpatRaster
r <- rast(ncol=4, nrow=4, xmin=xmn, xmax=xmx, ymin=ymn, ymax=ymx, crs=crs)
# Asignar los valores
values(r) <- c(9, 10, 5, 100,
6, 25, 10, 5,
4, NA, 15, 30,
1, 2, 25, 50)
r
# Trasponer el raster para que coincida con la disposición deseada
r <- t(r)
plot(r)
tex(r)
text(r)
?ifel
r <- rast(x=matrix(1:16*5,4,byrow = FALSE),crs="EPSG:4326")
# Definir el CRS a UTM Huso 19 Sur usando el código EPSG
crs_utm <- "EPSG:32719"
# Transformar el sistema de referencia de coordenadas al UTM Huso 19 Sur
r <- project(r, crs_utm)
# Sumar 10 a cada valor de los píxeles
r_plus10 <- r + 10
# Calcular la raíz cuadrada de cada valor de los píxeles
r_sqrt <- sqrt(r_plus10)
plot(r_sqrt);text(r_sqrt)
r_new <- ifel(r < 46 | r > 54, NA, r)
plot(r_new);text(r_new)
r <- rast(x=matrix(1:16*5,4,byrow = FALSE),crs="EPSG:4326")
# Transformar el sistema de referencia de coordenadas al UTM Huso 19 Sur
r <- project(r, crs_utm)
# Sumar 10 a cada valor de los píxeles
r_plus10 <- r + 10
# Calcular la raíz cuadrada de cada valor de los píxeles
r_sqrt <- sqrt(r_plus10)
plot(r_sqrt);text(r_sqrt)
(df_pol <- data.frame(x=c(0,4,6,4,0,-2),y=c(0,0,2*sqrt(3),4*sqrt(3),4*sqrt(3),2*sqrt(3))))
m_pol <- as.matrix(df_pol)
pol <- st_polygon(list(rbind(m_pol,m_pol[1,])))
plot(pol)
inv_lagos
inv_lagos <- st_read("Evaluaciones/Eva2_2023/data/Lagos/Inventario_Lagos.shp")
inv_lagos
st_geometry(inv_lagos) #Geometry type: MULTIPOLYGON
#Dimension: XY
crs(inv_lagos, describe = TRUE) #WGS 84 / Proyectada / UTM zone 19S /EPSG 32719
str(inv_lagos) # 2067 obs. of  22 variables
str(inv_lagos) # 2067 obs. of  22 variables
ext(inv_lagos) # xmin: 16712.94 ymin: 3870128 xmax: 697838.5 ymax: 8051367
lagos_stgo <- inv_lagos[inv_lagos$PROVINCIA %in% "Santiago",] # 9 observaciones
lagos_stgo
lagos_stgo <- inv_lagos[inv_lagos$PROVINCIA == "Santiago",] # 9 observaciones
lagos_stgo
lagos_stgo$PROVINCIA
inv_lagos$PROVINCIA == "Santiago"
plot(lagos_stgo["AREA_KM2"], col = "red")
r1 <- rast(xmin = -71.5, xmax = -70.25,
ymin = -37.33 , ymax = -35.33,
ncols = 4, nrow = 4, crs="EPSG:4326")
values(r1)<-c(9,6,4,1,10,25,NA,2,5,10,15,25,100,5,30,50)
plot(r1); text(r1)
r6 <- rast(x=matrix(1:16*5,4,byrow = FALSE),crs="EPSG:4326")
plot(r);text(r)
l <-  r6 < 46 | r6 > 54
plot(l); text(l)
r6[l]<- NA
plot(r6); text(r6)
r2
r2 <- rast(x=matrix(1:16*5,4,byrow = FALSE),crs="EPSG:4326")
calc <- global(r2, c("sum", "mean", "sd"), na.rm=TRUE)
calc
im
plot(im[[1:3]])
p <- im[[1:3]]
plot(p)
#VECTORIALES
#1. (20pts) Cree un pentágono con las coordenadas que se indican en los puntos A, B, C, D, E y F:
df_pol <- data.frame(x=c(0,4,6,4,0,-2),y=c(0,0,2*sqrt(3),4*sqrt(3),4*sqrt(3),2*sqrt(3)))
df_pol
dfp <- as.matrix(df_pol)
pol <- st_polygon(list(rbind(dfp,dfp[1,])))
plot(pol)
#2. Cargue la capa vectorial correspondiente al Inventario Lagos e indique lo siguiente :
lagos<-st_read("data/lagos")
ext(lagos_stgo)
#c. (15pts) haga un mapa (con plot) en donde se muestre con colores la variación de la variable área (AREA_KM2)
plot(lagos_stgo["AREA_KM2"], col = "red")
#d. (20pts) seleccione el primer lago de lagos_stgo y simplifique su geometria, considerando una tolerancia de 30m. Haga un plot de la geometría original y simplificada.
lago_1<-lagos_stgo[1,]##
lago_sim<-st_simplify(lago_1,dTolerance = 30)
plot(lago_1)
plot(lago_sim)
#RASTER
#1. (30pts) Cree un raster de 4 filas y 4 columnas que se encuentre entre 35°20’ y 37°30’ de latitudSur; y 71°50’ y 70°15’ de longitud Oeste. El sistema de referencia de coordenadas debe ser coordenadas geográficas y datum WGS84. En cada fila el raster debe tener los siguientes valores:
71+50/60
70+15/60
35+20/60
37+30/60
r1<-rast(xmin=-71.83,xmax=-70.25,ymin=-37.5,ymax=-35.33,ncol=4,nrow=4,crs="EPSG:4326")
#- Fila 1: 9, 6, 4, 1
#- Fila 2: 10, 25, NA, 2
#- Fila 3: 5, 10, 15, 25
#- Fila 4: 100, 5, 30, 50
values(r1)<-c(9,6,4,1,10,25,NA,2,5,10,15,25,100,5,30,50)
plot(r1)
text(r1)
#4. (20pts) Cree un nuevo raster, tomando como referencia el raster de la pregunta 2, al que se le cambie los valores que son menores que 46 y mayores que 54, por el valor NA .
r6 <- rast(x=matrix(1:16*5,4,byrow = FALSE),crs="EPSG:4326")
plot(r);text(r)
l <-  r6 < 46 | r6 > 54
plot(l); text(l)
r6[l]<- NA
plot(r6); text(r6)
df <- data.frame(
latitud = c(0,4,6,4,0,-2),
longitud = c(0,0,3.464,6.928,6.928,3.464)
)
pol <- as.matrix(df)
po <- st_polygon(
list(
rbind(pol,pol[1,]))
)
po
plot(po)
rr <-rast(ymax=-70.250,ymin=-71.833,xmax=-35.333,xmin= -37.500,ncols=4,nrows=4,nlyr=4)
r <- rast(x=matrix(1:16*5,4,byrow = FALSE),crs="EPSG:4326")
o<-r+10
o
values(o)
x<-sqrt(o)
values(x)
nu <-r
nu[nu<46|nu>54]<-NA
plot(nu)
text(nu,digits=2)
summary(r)
minmax(i)
minmax
?minmax
#1(20pts) Cree un pentágono con las coordenadas que se indican en los puntos A, B, C, D, E y F:
numero<-3
rc<-sqrt(numero)
rc
coords<-matrix(c(
c(0,0),
c(4,0),
c(6,2,rc),
c(4,4,rc),
c(0,4,rc),
c(-2,2,rc)
),ncol=2,byrow=TRUE)
pentagono<-st_polygon(list(coords))
pentagono_sf<-st_sf(geometry=st_sfc(pentagono),crs=4326)
plot(pentagono_sf,col="lightblue",main="Pentágono")
#2Cargue la capa vectorial correspondiente al Inventario Lagos e indique lo siguiente :
capa_lagos<-read_sf('Evaluaciones/Eva2_2023/data/Lagos/Inventario_Lagos.shp')
lagos_stgo <- capa_lagos[inven_lagos$
PROVINCIA == "Santiago", ]
lagos_stgo <- capa_lagos[inven_lagos$
PROVINCIA == "Santiago", ]
#(5pts) tipo de geometria
class(capa1$geometry)
#(10pts) sistema de referencia de coordenadas (datum, proyectada o no proyectada, huso si corresponde y código EPSG)
st_crs(capa1)$epsg
#(5pts) cantidad de variables y observaciones
#observaciones y variables
print(capa1)
#a.(15pts) seleccione los lagos que pertenecen a la provincia de Santiago y asignelo a un objeto lagos_stgo. ¿Cuántos son?
lagos_stgo<-capa_lagos[capa_lagos$PROVINCIA=="Santiago"),]
#hay 34 lagos
#b.  (10pts) reproyecte (transforme) el sistema de referencias de coordendas de lagos_stgo a SRC EPSG 4326 y reemplázelo.
lagos_stgo<-st_set_crs(emas_sf, 4326)
#c.(15pts) haga un mapa (con plot) en donde se muestre con colores la variación de la variable área (AREA_KM2)
plot(lagos_stgo[, c(2, 22)], main = "Variación de la variable área (AREA_KM2)")
#d.(20pts) seleccione el primer lago de lagos_stgo y simplifique su geometria, considerando una tolerancia de 30m. Haga un plot de la geometría original y simplificada.
lagos_stgo_sim30<- lagos_stgo[1,]
lagos_stgo_sim30<-st_simplify(lagos_stgo,dTolerance=30)
plot(lagos_stgo_sim30$geometry)
lagos_stgo_sim30
lagos_stgo[1,]
#d.(20pts) seleccione el primer lago de lagos_stgo y simplifique su geometria, considerando una tolerancia de 30m. Haga un plot de la geometría original y simplificada.
lagos_stgo_sim30<- lagos_stgo[1,]
lagos_stgo_sim30
lagos_stgo_sim30<-st_simplify(lagos_stgo,dTolerance=30)
plot(lagos_stgo_sim30$geometry)
#4. Cargue la capa de Indice Calidad Aguas y realice lo siguiente:
capa_agua<-read_sf('Evaluaciones/Eva2_2023/data/ICA_Indice_Calidad_Aguas.shp')
#4. Cargue la capa de Indice Calidad Aguas y realice lo siguiente:
capa_agua<-read_sf('Evaluaciones/Eva2_2023/data/Indice_Calidad_de_Aguas/ICA_Indice_Calidad_Aguas.shp')
#a.(15pts) Seleccione las observaciones que se encuentran en la comuna de “Romeral”. ¿Cuántas puntos hay?
obs_comun <- capa_agua[capa_agua$NOM_COM=="Romeral"),]
#b.(10pts) cree un buffer de 1000 metros en los puntos que se encuentran en Romeral y asignelo al objeto calag_rom_buf.
calag_rom_buf<-st_buffer(obs_comun,1000)
#c.(10pts) ¿cuáles son los nombres de las cinco primeras variables de calag_rom_buf.
colnames(calag_rom_buf)[1:5]
library(terra)
# Definir las coordenadas y el sistema de referencia del nuevo raster
ext <- c(-71.50, -70.15, -37.50, -35.33333)
res <- c((ext[2] - ext[1]) / 4, (ext[4] - ext[3]) / 4)
crs <- "+proj=longlat +datum=WGS84"
# Crear el raster de 4 filas y 4 columnas
raster_nuevo <- rast(nrows = 4, ncols = 4, ext = ext, res = res, crs = crs)
raster_nuevo
# Asignar los valores a las filas del raster
values(raster_nuevo) <- matrix(c(9, 6, 4, 1, 10, 25, NA, 2, 5, 10, 15, 25, 100, 5, 30, 50), nrow = 4, byrow = TRUE)
# Mostrar el nuevo raster
plot(raster_nuevo)
text(raster_nuevo)
# ocupando el mismo raster de la pregunta 2
r <- rast(x=matrix(1:16*5, 4, byrow=FALSE), crs="EPSG:4326")
# Mostrar el raster original ocupando las mismas funciones que en la pregunta anterior
plot(r)
text(r, col="red", cex=0.8, pos=1)
# Crear un nuevo raster con valores NA donde el valor original es menor que 46 o mayor que 54
r_nuevo <- r
r_nuevo[r_nuevo < 46 | r_nuevo > 54] <- NA #r_nuevo nos muestra que la min y maxima es  50 min value   :    50  max value   :    50
# Mostrar el raster modificado donde podemos ver que solo hay un valor
plot(r_nuevo)
#Crear vectores para cada uno de los puntos
p1 <- c(0,0)
p2 <- c(4,0)
p3 <- c(6,2*sqrt(3))
p4 <- c(4,4*sqrt(3))
p5 <- c(0,4*sqrt(3))
p6 <- c(-2,2*sqrt(3))
#Crear data.frame
df1 <- data.frame(p1,p2,p3,p4,p5,p6)
#Crear matriz a parti del data.frame
#NOTA: las columnas se transformaron en filas
mat1 <- rbind(df1[,1],df1[,2],df1[,3],df1[,4],df1[,5],df1[,6])
#Añadir la primera coordenada al final para que el anillo cierre
anillo <- rbind(mat1,mat1[1,])
#Crear lista que contenga la matriz
poligono <- list(anillo)
#Crear objeto sfg de clase polígono
hexagono <- st_polygon(poligono)
#Graficar hexagono
par(mfrow=c(1,1))
plot(hexagono)
#Crear objeto spatRaster con la información solicitada
r1 <- rast(xmin=-71.83,xmax=-70.25,ymin=-37.5,ymax=-35.33,
ncols=4,nrows=4,
crs="EPSG:4326")
#Crear vectores en base a las filas solicitadas
fila1 <- c(9, 6, 4, 1)
fila2 <- c(10, 25, NA, 2)
fila3 <- c(5, 10, 15, 25)
fila4 <- c(100, 5, 30, 50)
#Asignar a r1 los valores solicitados
values(r1) <- c(fila1,fila2,fila3,fila4)
#Graficar para comprobar que esté correcto
par(mfrow=c(1,1))
plot(r1);text(r1)
#Realizar pregunta lógica y guardar resultado en un objeto spatRaster de valores lógicos
rlog <- r < 46 | r > 54
plot(rlog);text(rlog)
#Duplicar raster, al cual se le aplicará la indexación
r4 <- r
plot(r4);text(r4)
#Indexar y reemplazar los TRUE del objeto de valores lógicos por NA
r4[rlog] <- NA
plot(r4);text(r4)
#Calcular el promedio
global(r,fun="mean")
#Calcular la mediana
global(r,fun= function(x) quantile(x,.5))
#Calcular desviacion estandar
global(r,fun="sd")
