slice_sample(n = 5)
estas_sf |>
slice_sample(n = 5) |>
pull(region) -> regs
regs
estas_sf |>
slice_sample(n = 5) |>
pull(region) -> regs
regs
estas_sf |>
group_by(region) |>
slice_sample(n = 5) |>
pull(region) -> regs
regs
estas_sf |>
group_by(region) |>
slice_sample(n = 1) |>
pull(region) -> regs
regs
estas_sf |>
group_by(region) |>
slice_sample(n = .1) |>
pull(region) -> regs
estas_sf$region[sample(16,5)]
estas_sf$region[sample(16,5)]
estas_sf$region[sample(16,5)]
estas_sf$region[sample(16,5,replace = FALSE)]
estas_sf$region[sample(16,5,replace = FALSE)]
unique(estas_sf$region)[sample(16,5,replace = FALSE)]
unique(estas_sf$region)[sample(16,5,replace = FALSE)]
unique(estas_sf$region)[sample(16,5,replace = FALSE)]
regs <- c("Coquimbo",  "Los Lagos", "Los Ríos",  "O'Higgins", "Atacama")
lapply(regs,\(x){
estas_sf |>
filter(region == x) |>
write_sf(paste0('region_',x,'.gpkg'))
})
estas_sf |>
filter(region == x)  |>
plot(x$geometry)
lapply(regs,\(x){
estas_sf |>
filter(region == x)  |>
plot()
})
setwd("~/Documentos/IMSE1017/data_evaluacion_1")
data <- read.csv('datos_ema_49.csv')
data
read.csv('datos_ema_49.csv') |> summary()
read.csv('datos_ema_126.csv') |> summary()
data
data |> names()
read_sf('region_Atacama.gpkg')
read_sf('region_Atacama.gpkg') ->geo
plot(geo[,'comuna'])
#forma 3
iris['Sepal.Lewngth']
#forma 3
iris['Sepal.Length']
#forma 3
iris[,'Sepal.Length']
data <- read.csv('data_5/datos_ema_309.csv')
data
names(data)
data[data$humed_rel_promedio > hum_rel_prom]
data[data$humed_rel_promedio > hum_rel_prom,]
#humedad relativa promedio
hum_rel_prom <- mean(data$humed_rel_promedio,na.rm = TRUE)
data[data$humed_rel_promedio > hum_rel_prom,]
Los objetos sf sirven para almacena estructuras de datos geoespaciales
geo <- read_sf("data_5/region_O'Higgins.gpkg")
#install.packages('sf)
library(sf)
#install.packages('sf)
library(sf)
geo <- read_sf("data_5/region_O'Higgins.gpkg")
geo
st_geometry(geo)
geo
print(geo)
dim(geo)
plot(geo[,'comuna])
plot(geo[,'comuna'])
geo[geo$institucion == 'INIA',]
names(data)
dim(mtcars)
dim(mtcars)
#10.-Haga una union por por columna de las matrices m1 y m2
m1 <- matrix(1:sample(seq(9,18,3),1),3)
m2 <- matrix(1:sample(seq(9,18,3),1),3)
rbind(m1,m2)
mtcars[3]
# Ejercicio 8 Muestre tres formas de indexar la primera columna del data.frame USArrests
USArrests[,1]
USArrests$Murder
#########################################Revisar ############################
index <- which(USArrests$Murder == "Murder")
USArrests[index, 1 ]
USArrests[index, ]
USArrests[, index ]
index
#d.
mtcars4 <- data.frame(mtcars$mpg<21)
mtcars4
vector("numeric",5)
vector('logical',5)
#punto7
LOGIC<- a == 2
which(a==2)
a == 2
vector <- c(3, 6, 9)
#punto7
mi_matriz <- matrix(1:9, nrow = 3, ncol=3)
mi_matriz
vectorlogico <- a == c(1:3)
a
c<- data.frame(mtcars)
lista2 <- list("A", "B", "C")
lista2
mi_lista_principal <- list(vectorlogicoo = vectorlogico, matriz = mi_matriz, datamtcars = c)
mi_lista_principal
vectorlogico <- a == c(1:3)
a
c<- data.frame(mtcars)
lista2 <- list("A", "B", "C")
lista2
mi_lista_principal <- list(vectorlogicoo = vectorlogico, matriz = mi_matriz, datamtcars = c)
vectorlogico <- a == c(1:3)
m1 <- matrix(1:sample(seq(9,18,3),1),3)
m1
primeracoluma <- m1[,1]  #primera columna
m2 <- matrix(1:sample(seq(9,18,3),1),3)
m2
primeracolumaa <- m2[,1] # primera columna
union_interna <- merge(primeracoluma, primeracolumaa)
union_interna
#Cree un nuevo data.frame airquality3 en el que estén solo las filas 56, 29, 31, 27, 147. Hágalo de dos maneras diferentes.
filas_seleccionadas <- c(56, 29, 31, 27, 147)
airquality3 <- subset(airquality, rownames(airquality) %in% filas_seleccionadas)
airquality3
airquality[filas_seleccionadas,]
#1. Cree los siguientes objetos de tipo vector.
exVec1 = c(-34, 16, 38, -19, -40)
exVec1
exVec2 = c(-38, 34, 37, -27, -3)
exVec2
exVec3 = seq(-5, 5, by=0.5)
exVec3
#2.Junte los vectores exVec1 con exVec2 y guardelos en un nuevo vector llamado exVec_resultado (usando una sóla linea). Muestre el resultado.
exVec1 = c(-34, 16, 38, -19, -40)
exVec2 = c(-38, 34, 37, -27, -3)
exVec_resultado = as.numeric(rbind(exVec1, exVec2))
exVec_resultado
#forma 1
USArrests$Murder       ####revisar si me queda tiempo
#forma 2
USArrests [c(1)]
#forma 3
USArrests [c("Murder")]
mtcars
structure(mtcars)
structure
structure(mtcars)
library(sf)
library(sf)
library(terra)
library(sf)
st_point(c(-36.25,-72.65,200,90))
#| echo: true
#| eval: true
set.seed(123)
df <- data.frame(longitud = runif(10,-74,-70),latitud = runif(10,-50,-14))
df
# transforma data.frame en matrix
dfm <- as.matrix(df)
mpt <- st_multipoint(dfm)
# linestring
ls <- st_linestring(dfm)
# multilinestring
mls <- st_multilinestring(
list(dfm[1:5,]),dfm[6:10,])
# polygon
p <- st_polygon(
list(
rbind(dfm,dfm[1,]))
)
# multipolygon
mp <- st_multipolygon(
list(
list(
rbind(dfm[1:5,],dfm[1,])),
list(
rbind(dfm[6:10,],dfm[6,])
)
)
)
# geometry collection
gc <- st_geometrycollection(list(mpt,ls,mls,p,mp))
mpt_sfc <- st_sfc(mpt)
ls_sfc <- st_sfc(ls)
mls_sfc <- st_sfc(mls)
p_sfc <- st_sfc(p)
mp_sfc <- st_sfc(mp)
gc_sfc <- st_sfc(gc)
st_sf(c(mpt_sfc,ls_sfc,mls_sfc,p_sfc,mp_sfc,gc_sfc))
st_sf(c(mpt_sfc,ls_sfc,mls_sfc,p_sfc,mp_sfc,gc_sfc)) |> plot()
plot(mpt_sfc)
plot(ls_sfc)
ls
mls
plot(mls)
plot(ls)
plot(mls)
library(sf)
st_point(c(-36.25,-72.65,200,90))
st_point(c(-36.25,-72.65,200,90)) |> strr()
st_point(c(-36.25,-72.65,200,90)) |> str()
df <- data.frame(
linea = c(rep('linea_1',4),rep('linea_2',4)),
latitud = c(-33.38991,-33.38959,-33.38929,-33.38893,
-33,38943,-33,38911,-33,38883,-33,38846),
longitud = c(-70.63500,-70.63468,-70.63435,-70.63396,
-70,63566,-70,63531,-70,63500,-70,63461)
)
c(rep('linea_1',4),rep('linea_2',4))
df <- data.frame(
linea = c(rep('linea_1',4),rep('linea_2',4)),
latitud = c(-33.38991,-33.38959,-33.38929,-33.38893,
-33,38943,-33,38911,-33,38883,-33,38846),
longitud = c(-70.63500,-70.63468,-70.63435,-70.63396,
-70,63566,-70,63531,-70,63500,-70,63461)
)
df <- data.frame(
linea = c(rep('linea_1',4),rep('linea_2',4)),
latitud = c(-33.38991,-33.38959,-33.38929,-33.38893,
-33.38943,-33.38911,-33.38883,-33.38846),
longitud = c(-70.63500,-70.63468,-70.63435,-70.63396,
-70.63566,-70.63531,-70.63500,-70.63461)
)
df
# transforma data.frame en matrix
dfm <- as.matrix(df)
# multipoint
mpt <- st_multipoint(dfm)
#| echo: true
#| eval: true
df <- data.frame(
latitud = c(-33.38991,-33.38959,-33.38929,-33.38893),
longitud = c(-70.63500,-70.63468,-70.63435,-70.63396)
)
df
as.matrix(df)
# multipoint
mpt <- st_multipoint(dfm)
dfm
#| echo: true
#| eval: true
df <- data.frame(
latitud = c(-33.38991,-33.38959,-33.38929,-33.38893),
longitud = c(-70.63500,-70.63468,-70.63435,-70.63396)
)
df
# transforma data.frame en matrix
dfm <- as.matrix(df)
dfm
# multipoint
mpt <- st_multipoint(dfm)
mpt
# linestring
ls <- st_linestring(dfm)
list(df[2:3,1:4,]),dfm[2:3,5:8]
list(df[2:3,1:4]),dfm[2:3,5:8]
list(df[2:3,1:4],dfm[2:3,5:8]
)
list(df[2:3,1:4],df[2:3,5:8])
#| echo: true
#| eval: true
df <- data.frame(
linea = c(rep('linea_1',4),rep('linea_2',4)),
latitud = c(-33.38991,-33.38959,-33.38929,-33.38893,
-33.38943,-33.38911,-33.38883,-33.38846),
longitud = c(-70.63500,-70.63468,-70.63435,-70.63396,
-70.63566,-70.63531,-70.63500,-70.63461)
)
list(df[2:3,1:4],df[2:3,5:8])
df
list(df[1:4,2:3],df[5:8,2:3])
st_multilinestring(
list(df[1:4,2:3],df[5:8,2:3])
)
dfm <- as.matrix(df[,2:3])
dfm
mls <- st_multilinestring(
list(dfm[1:4,2:3],dfm[5:8,2:3])
)
dfm <- as.matrix(df[,2:3]) #transforma en matrix
mls <- st_multilinestring(
list(dfm[1:4,2:3],dfm[5:8,2:3])
)
dfm
mls <- st_multilinestring(
list(dfm[1:4,],dfm[5:8,])
)
mls
df[c(1:2,5:8),]
df_polm <- as.matrix(df_pol,2:3)
#|echo: true
#|eval: true
df_pol <- df[c(1:2,5:8),]
df_polm <- as.matrix(df_pol,2:3)
df_polm <- as.matrix(df_pol[,2:3])
df_polm <- as.matrix(df_pol[,2:3])
# polygon
pol <- st_polygon(
list(
rbind(df_polm,df_polm[1,]))
)
pol
plot(pol)
#|echo: true
#|eval: true
df_pol <- data.frame(
latitud = c(-33.38943,-33.38911,-33.38991,-33.38959),
longitud = c(-70.63566,-70.63531,-70.63500,-70,63468)
)
#|echo: true
#|eval: true
df_pol <- data.frame(
latitud = c(-33.38943,-33.38911,-33.38991,-33.38959),
longitud = c(-70.63566,-70.63531,-70.63500,-70.63468)
)
df_polm <- as.matrix(df_pol)
# polygon
pol <- st_polygon(
list(
rbind(df_polm,df_polm[1,]))
)
class(pol)
plot(pol)
#|echo: true
#|eval: true
df_pol <- data.frame(
latitud = c(-33.38943,-33.38991,-33.38911,-33.38959),
longitud = c(-70.63566,-70.63500,-70.63531,-70.63468)
)
df_polm <- as.matrix(df_pol)
# polygon
pol <- st_polygon(
list(
rbind(df_polm,df_polm[1,]))
)
class(pol)
plot(pol)
#|echo: true
#|eval: true
df_pol <- data.frame(
latitud = c(-33.38943,-33.38911,-33.38991,-33.38959),
longitud = c(-70.63566,-70.63531,-70.63500,-70.63468)
)
#|echo: true
#|eval: true
df_pol <- data.frame(
latitud = c(-33.38943,-33.38911,-33.38991,-33.38959),
longitud = c(-70.63566,-70.63531,-70.63500,-70.63468)
)
```{r}
df_polm <- as.matrix(df_pol)
# polygon
pol <- st_polygon(
list(
rbind(df_polm,df_polm[1,]))
)
class(pol)
plot(pol)
df_polm <- as.matrix(df_pol)
# polygon
pol <- st_polygon(
list(
rbind(df_polm,df_polm[1,]))
)
class(pol)
plot(pol)
#|echo: true
#|eval: true
df_pol <- data.frame(
latitud = c(-33.38943,-33.38911,-33.38959,-33.38991),
longitud = c(-70.63566,-70.63531,-70.63468,-70.63500)
)
par(mfrow = c(1,1))
df_polm <- as.matrix(df_pol)
# polygon
pol <- st_polygon(
list(
rbind(df_polm,df_polm[1,]))
)
class(pol)
plot(pol)
df_mpolm <- as.matrix(df_mpol[,2:3])
df_mpol <- data.frame(
poligono = c(rep('poligono_1',4),rep('poligono_2',4)),
latitud = c(-33.38943,-33.38911,-33.38959,-33.38991,
-33.38883,-33.38846,-33.38893,-33.38929),
longitud = c(-70.63566,-70.63531,-70.63468,-70.63500,
-70.63500,-70.63461,-70.63396,-70.63435)
)
df_mpolm <- as.matrix(df_mpol[,2:3])
mp <- st_multipolygon(
list(
list(
rbind(df_mpolm[1:4,],df_mpolm[1,])),
list(
rbind(df_mpolm[5:8,],df_mpolm[8,])
)
)
)
rbind(df_mpolm[1:4,],df_mpolm[1,]))
rbind(df_mpolm[1:4,],df_mpolm[1,])
rbind(df_mpolm[5:8,],df_mpolm[8,])
mp <- st_multipolygon(
list(
list(
rbind(df_mpolm[1:4,],df_mpolm[1,])
),
list(
rbind(df_mpolm[5:8,],df_mpolm[5,])
)
)
)
df_mpol <- data.frame(
poligono = c(rep('poligono_1',4),rep('poligono_2',4)),
latitud = c(-33.38943,-33.38911,-33.38959,-33.38991,
-33.38883,-33.38846,-33.38893,-33.38929),
longitud = c(-70.63566,-70.63531,-70.63468,-70.63500,
-70.63500,-70.63461,-70.63396,-70.63435)
)
df_mpolm <- as.matrix(df_mpol[,2:3])
mp <- st_multipolygon(
list(
list(
rbind(df_mpolm[1:4,],df_mpolm[1,])
),
list(
rbind(df_mpolm[5:8,],df_mpolm[5,])
)
)
)
class(mp)
plot(mp)
plot(gc)
plot(gc)
gc <- st_geometrycollection(list(mpt,ls,mls,pol,mp))
class(gc)
plot(gc)
?st_as_sf
library(agrometR)
estaciones_agromet
library(tidyverse)
estaciones_agromet |> filter(region == 'Metropolitana')
estaciones_agromet |> filter(region == 'Metropolitana') |> put()
?put
estaciones_agromet |> filter(region == 'Metropolitana') |> silce(10'')
estaciones_agromet |> filter(region == 'Metropolitana') |> silce(1:10)
estaciones_agromet |> filter(region == 'Metropolitana') |> slice(1:10)
estaciones_agromet |> filter(region == 'Metropolitana') |> slice(1:10) |> PUT()
?PUT
estaciones_agromet |> filter(region == 'Metropolitana') |> slice(1:10)
estaciones_agromet |> filter(region == 'Metropolitana') |> slice(1:10)
estaciones_agromet |> filter(region == 'Metropolitana') |> slice(1:10) |> dput()
estaciones_agromet |> filter(region == 'Metropolitana') |> slice(1:10) |> select(latitud,longitud) |> dput()
estaciones_agromet |> filter(region == 'Metropolitana') |> slice(1:10) |> pull(nombre_ema)
estaciones_agromet |> filter(region == 'Metropolitana') |> slice(1:10) |> pull(nombre_ema) |> dput()
df <- data.frame(
latitud = c(-33.70, -33.07, -33.12,-33.67, -33.70, -33.65, -33.67, -33.66, -33.86, -33.21),
longitud = c(-71.37, -70.75, -70.83, -70.58, -70.70, -71.1, -70.92, -70.76, -70.63, -70.71)
)
df
st_as_sf(df,coords = c('longitud','latitud'))
estaciones_agromet |> filter(region == 'Metropolitana') |> slice(1:10) |> pull(nombre_ema)
estaciones_agromet |> filter(region == 'Metropolitana') |> slice(1:10) |> pull(nombre_ema) |> dput()
list.files('/home/francisco/Documentos/IMSE1017/Taller4/Aire_-_Shapefile/')
list.files('/home/francisco/Documentos/IMSE1017/Taller4/Aire_-_Shapefile/',pattern='shp$')
list.files('/home/francisco/Documentos/IMSE1017/Taller4/Aire_-_Shapefile/',pattern='shp$',full.names = TRUE)
files <- list.files('/home/francisco/Documentos/IMSE1017/Taller4/Aire_-_Shapefile/',pattern='shp$',full.names = TRUE)
read_sf(files[1])
files[1]
read_sf(files[1])
citation('sf')
print(citation('sf'),bibtex=TRUE)
citation('terra')
sessionInfo()
citation()
s1 <-data.frame(
año =c(10,20,30,40,50,60),
mes =c(01,02,03,04,05,06),
hora =c(13,14,15,16,17,18))
s1 <-s1[,!names(s1) %in% "año"]
s1
u1 <- data.frame(A = c(NA,6,9,3),
B = c(NA,9,9,NA),
C = c(6,NA,6,9))
u1
u1[is.na(u1)] <- 3
u1
i1 <-data.frame(
edad = c(10,20,30),
kg = c (35, 65, 85))
i1$años <- i1$edad
i1$peso <- i1$kg
i1 <- i1 [, c("años", "peso")]
i1
df<- iris [1:5,1:5]
df
